<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImageRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function setCacheUtility( $secondLevelCacheUtility ) {
        $this->secondLevelCacheUtility = $secondLevelCacheUtility;
    }
    
    /*
     * Query che ritorna le immagini per l'impaginazione
     */
    public function findImgArticle( $articleId, $limit ) {
        $limit = explode(',', $limit);
        $firstResult = count($limit) == 1 ? 0 : $limit[0];
        $lastResult = count($limit) == 1 ? $limit[0] : $limit[1];

        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT img FROM AppBundle:Image img
                        JOIN img.dataArticles da
                        where da != :articleId ORDER BY img.id desc
                ')
                ->setParameter('articleId', $articleId)
                ->setFirstResult($firstResult)
                ->setMaxResults($lastResult);        
        
        try {
            $query->setCacheable( true );
            $query->setCacheRegion( 'my_image_region_query' );

            if( FIRST_LEVEL_CACHE_ENABLED && ( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) ) {
                $query->useQueryCache( true );
                $query->useResultCache(true, IMAGE_REGION_TTL, 'image_findImgArticle_CacheORM'.md5( $articleId.$firstResult.$lastResult ) );    
            }      
       
            $result = $query->getResult();   
            if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
                $this->secondLevelCacheUtility->setExpire( 'image', IMAGE_REGION_TTL );
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }            
        return $result;
    }
    /*
     * Query che ritorna le immagini per l'impaginazione
     */

    public function findImg( $limit, $search = false ) {
        $limit = explode(',', $limit);
        $firstResult = count($limit) == 1 ? 0 : $limit[0];
        $lastResult = count($limit) == 1 ? $limit[0] : $limit[1];

        $where = !empty( $search ) ? " WHERE img.titleImg like '%$search%'" : "";
        
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT img FROM AppBundle:Image img '.$where.' ORDER BY img.id desc
                ')
                ->setFirstResult($firstResult)
                ->setMaxResults($lastResult);        
        
        try {
            $query->setCacheable( true );
            $query->setCacheRegion( 'my_image_region_query' );

            if( FIRST_LEVEL_CACHE_ENABLED && ( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) ) {
                $query->useQueryCache( true );
                $query->useResultCache(true, IMAGE_REGION_TTL, 'image_findImg_CacheORM'.md5( $firstResult.$lastResult ) );    
            }      
       
            $result = $query->getResult();   
            if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
                $this->secondLevelCacheUtility->setExpire( 'image', IMAGE_REGION_TTL );
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }            
        return $result;
    }
}
