<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function setCacheUtility( $secondLevelCacheUtility ) {
        $this->secondLevelCacheUtility = $secondLevelCacheUtility;
    }
    
    /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findById( $id, $toArray = false ) {
        $sql = 'SELECT c FROM AppBundle:Category c WHERE c.id = '.$id;              
        $query = $this->getEntityManager()->createQuery( $sql );        
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_category_region_query' );
                
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, CATEGORY_REGION_TTL, 'category_findById_CacheORM'.md5( $sql ) );    
        }        
        $result = $query->getOneOrNullResult();      
        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
            $this->secondLevelCacheUtility->setExpire( 'category', CATEGORY_REGION_TTL );
        
        return $result;
    }
    
    /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findByNameUrl( $name ) {
        $sql = "SELECT c,s,t FROM AppBundle:Category c 
                LEFT JOIN c.subcategories s
                LEFT JOIN s.typology t
                WHERE c.nameUrl = '".$name."'"; 
        $query = $this->getEntityManager()->createQuery( $sql );        
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_category_region_query' );
                
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, CATEGORY_REGION_TTL, 'category_findByNameUrl_CacheORM'.md5( $sql ) );    
        }        
        $result = $query->getOneOrNullResult();
        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
            $this->secondLevelCacheUtility->setExpire( 'category', CATEGORY_REGION_TTL );
        
        return $result;
    }
    
    /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findAllCategories( $toObject = false ) {
        $sql = 'SELECT c,s,t FROM AppBundle:Category c 
                LEFT JOIN c.subcategories s
                LEFT JOIN s.typology t
                WHERE c.isactive = 1 ORDER BY c.order ASC';        
//        $sql = 'SELECT c FROM AppBundle:Category c                
//                WHERE c.isactive = 1 ORDER BY c.order ASC';        
        $query = $this->getEntityManager()->createQuery( $sql );
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_category_region_query' );
                
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, CATEGORY_REGION_TTL, 'category_findAllCategories_CacheORM'.md5( $sql ) );    
        }        
        
        if( empty ( $toObject ) ) {
            $result =  $query->getResult();
        } else {
            $result = $query->getResult( \Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY );
            $result =  json_decode(json_encode($result), FALSE);
        }
        
        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
            $this->secondLevelCacheUtility->setExpire( 'category', CATEGORY_REGION_TTL );
        
        return $result;
    }
    
    
    public function getAllCategories( $toObject = false ) {
        $sql = 'SELECT c FROM AppBundle:Category c order by c.orderCat';                
        $query = $this->getEntityManager()->createQuery( $sql );
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_category_region_query' );
                
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, CATEGORY_REGION_TTL, 'category_getAllCategories_CacheORM'.md5( $sql ) );    
        }        
        
        
        try {
            if( empty ( $toObject ) )
                $result =  $query->getResult();
            else
                $result = $query->getResult( \Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY );
                $result =  json_decode(json_encode($result), FALSE);
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
        
        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
            $this->secondLevelCacheUtility->setExpire( 'category', CATEGORY_REGION_TTL );
        
    }
}
