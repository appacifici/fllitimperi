<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TopTrademarksSectionRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function setCacheUtility( $secondLevelCacheUtility ) {
        $this->secondLevelCacheUtility = $secondLevelCacheUtility;
    }
    
    
    /**
     * Recupera i modelli per un marchio e una sottocategoria
     * @param type $subcategoryId
     * @return type
     */
    public function findBySubcatTypoTrademark( $subcategoryId = false, $typologyId = false, $isActive = 1  ) {         
        $where = '';
        if( !empty( $subcategoryId ) ) {
            $where .= " AND t.subcategoryId = $subcategoryId";
        }
        if( !empty( $typologyId ) ) {
            $where .= " AND t.typologyId = $typologyId";
        }                       
        
        $sql = 'SELECT  t  FROM AppBundle:TopTrademarksSection t
                    WHERE t.isActive = '.$isActive.$where.' ORDER BY t.position  ASC
                ';
        
        $query = $this->getEntityManager()->createQuery( $sql );        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_model_region_result' );
          
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, BESTSELLER_MODEL_REGION_TTL, 'topTrademarksSection_findBySubcatTypoTrademark_CacheORM'.md5( $sql ) );    
        }                
        
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    /**
     * Recupera i modelli per un marchio e una sottocategoria
     * @param type $subcategoryId
     * @return type
     */
    public function checkTrademarkSection( $topTrademark, $subcatId, $typoId = false  ) {         
        $where = ' ';
        if( !empty( $subcatId ) ) {
            $where .= " AND t.subcategoryId = $subcatId";
        }
        if( !empty( $typoId ) ) {
            $where .= " AND t.typologyId = $typoId";
        }                       
        
        $sql = 'SELECT  t  FROM AppBundle:TopTrademarksSection t
                    WHERE t.trademarkId = '.$topTrademark.$where.'  
                ';
        
        $query = $this->getEntityManager()->createQuery( $sql );
        
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
