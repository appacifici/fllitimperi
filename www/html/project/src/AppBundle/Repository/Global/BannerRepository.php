<?php

namespace AppBundle\Repository;
use AppBundle\Repository\Web365ManagerRepository;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BannerRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function setCacheUtility( $secondLevelCacheUtility ) {
        $this->secondLevelCacheUtility = $secondLevelCacheUtility;
    }
    
      /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findById( $id, $toArray = false ) {
        $sql = 'SELECT b FROM AppBundle:Banner b WHERE b.id = '.$id;
        $query = $this->getEntityManager()->createQuery( $sql );
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_banner_region_query' );
                
//        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
//            $query->useQueryCache( true );
//            $query->useResultCache(true, BANNER_REGION_TTL, 'banner_findById_CacheORM'.md5( $sql ) );    
//        }        
        $result = $query->getSingleResult();        
        
//        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
//            $this->secondLevelCacheUtility->setExpire( 'banner', BANNER_REGION_TTL );
        
        return $result;
    }
    
        /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findByParams( $site, $active, $screen, $currentRoute, $toArray = false ) {
        $where = '';
        foreach( $screen AS $item  ) {
            $where .= "b.screen = '$item' OR ";
        }
        $where = trim( $where, 'OR ' );
                
        $sql = "SELECT b FROM AppBundle:Banner b WHERE b.site = '$site' AND b.isactive = '$active' AND b.route = '$currentRoute' AND (" .$where .") ";        
        $query = $this->getEntityManager()->createQuery( $sql );
//        
//        $query->setCacheable( true );
//        $query->setCacheRegion( 'my_banner_region_query' );
//                
//        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
//            $query->useQueryCache( true );
//            $query->useResultCache(true, BANNER_REGION_TTL, 'banner_findByParams_CacheORM'.md5( $sql ) );    
//        }        
        $result = $query->getResult();        
//        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
//            $this->secondLevelCacheUtility->setExpire( 'banner', BANNER_REGION_TTL );
        
        return $result;
    }
    
    /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findAllBanners( $toArray = false ) {                
        $query = $this->getEntityManager()->createQuery( 
            'SELECT b FROM AppBundle:Banner b order by b.name ASC' 
        );
        
//        $query->setCacheable( true );
//        $query->setCacheRegion( 'my_banner_region_query' );
                
//        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
//            $query->useQueryCache( true );
//            $query->useResultCache(true, BANNER_REGION_TTL, 'banner_findAllBanners_CacheORM');    
//        }        
        $result = $query->getResult();      
//        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
//            $this->secondLevelCacheUtility->setExpire( 'banner', BANNER_REGION_TTL );
        
        return $result;
    }
}
