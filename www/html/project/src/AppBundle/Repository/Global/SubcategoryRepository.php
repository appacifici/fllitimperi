<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubcategoryRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function setCacheUtility( $secondLevelCacheUtility ) {
        $this->secondLevelCacheUtility = $secondLevelCacheUtility;
    }
    
    public function findSubcategorySiteAffiliation( $isActive, $affId, $toObject = false ) {
        $sql = 'SELECT  sa,s,c FROM AppBundle:Subcategory s
                    JOIN s.subcatSiteAffiliation sa      
                    JOIN s.category c      
                    WHERE sa.isActive = '.$isActive.' and sa.affiliation = '.$affId.'
                    ORDER BY sa.name DESC';                
        
        $query = $this->getEntityManager()->createQuery( $sql );
        if( empty ( $toObject ) ) {
            $result =  $query->getResult();
        } else {
            $result = $query->getResult( \Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY );
            $result =  json_decode(json_encode($result), FALSE);
        }
        return $result;
    }
    
    /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findByNameUrl( $name ) {
//        $sql = "SELECT s,m,t FROM AppBundle:Subcategory s 
//                LEFT JOIN s.model m
//                LEFT JOIN m.trademark t
//                WHERE s.nameUrl = '".$name."' ORDER BY t.name asc, m.dateImport desc"; 
        $sql = "SELECT s,c FROM AppBundle:Subcategory s 
                JOIN s.category c   
                WHERE s.nameUrl = '".$name."' "; 
        $query = $this->getEntityManager()->createQuery( $sql )->setMaxResults(1);          
        
        $query->setCacheable( true );
        $query->setCacheRegion( 'my_subcategory_region_query' );
                
        if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
            $query->useQueryCache( true );
            $query->useResultCache(true, CATEGORY_REGION_TTL, 'subcategory_findByNameUrl_CacheORM'.md5( $sql ) );    
        } 
        
        $result = $query->getOneOrNullResult();
        if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
            $this->secondLevelCacheUtility->setExpire( 'subcategory', CATEGORY_REGION_TTL );
        
        return $result;
    }
    
     /**
     * Crea la query con la cache
     * @param type $toArray
     * @return type
     */
    public function findAllSubcategories( $toObject = false ) {
//        $sql = 'SELECT s FROM AppBundle:Subcategory s ORDER BY s.name ASC';
        $sql = 'SELECT s FROM AppBundle:Subcategory s WHERE s.isactive = 1 ORDER BY s.name ASC';
        $query = $this->getEntityManager()->createQuery( $sql );
        
        try {
            $query->setCacheable( SECOND_LEVEL_CACHE_ENABLED );
            $query->setCacheRegion( 'my_subcategory_region_query' );

            if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
                $query->useQueryCache( true );
                $query->useResultCache(true, TEAM_REGION_TTL, 'subcategory_findAllSubcategories_CacheORM'.md5( $sql ) );    
            }             
            
              if( empty ( $toObject ) ) {
                    $result =  $query->getResult();
                } else {
                    $result = $query->getResult( \Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY );
                    $result =  json_decode(json_encode($result), FALSE);
                }
            
            if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
                $this->secondLevelCacheUtility->setExpire( 'subcategory', TEAM_REGION_TTL );
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }            
        return $result;
        
    }
    
    /**
     * Crea la query con la cache che recupera i team per la registrazione Utente
     * @param type $toArray
     * @return type
     */
    public function findSubcategoriesIsTeam() {
        $sql = 'SELECT s FROM AppBundle:Subcategory s WHERE s.isTeam = 1 ORDER BY s.name ASC';
        $query = $this->getEntityManager()->createQuery( $sql );
        
        try {
            
//            $query->setCacheable( SECOND_LEVEL_CACHE_ENABLED );
//            $query->setCacheRegion( 'my_subcategory_region_query' );
//
//            if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
//                $query->useQueryCache( true );
//                $query->useResultCache(true, TEAM_REGION_TTL, 'subcategory_findSubcategoriesIsTeam_CacheORM'.md5( $sql ) );    
//            }      
       
            $result = $query->getResult();     
//            if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
//                $this->secondLevelCacheUtility->setExpire( 'subcategory', TEAM_REGION_TTL );
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
        
        return $result;
    }
    
    /**
     * Crea la query con la cache che recupera i team per la registrazione Utente
     * @param type $toArray
     * @return type
     */
    public function findSubcategoriesByCategory( $categoryId ) {
        $sql = 'SELECT s FROM AppBundle:Subcategory s WHERE s.category = '.$categoryId.' ORDER BY s.name ASC';
        $query = $this->getEntityManager()->createQuery( $sql );
        
        try {
            
//            $query->setCacheable( SECOND_LEVEL_CACHE_ENABLED );
//            $query->setCacheRegion( 'my_subcategory_region_query' );
//
//            if( !SECOND_LEVEL_CACHE_ENABLED || !$query->isCacheable() ) {
//                $query->useQueryCache( true );
//                $query->useResultCache(true, TEAM_REGION_TTL, 'subcategory_findSubcategoriesIsTeam_CacheORM'.md5( $sql ) );    
//            }      
       
            $result = $query->getResult();     
//            if( SECOND_LEVEL_CACHE_ENABLED ||  SECOND_LEVEL_CACHE_SET_EXPIRE_ENABLED  )
//                $this->secondLevelCacheUtility->setExpire( 'subcategory', TEAM_REGION_TTL );
            
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
        
        return $result;
    }
    
}
