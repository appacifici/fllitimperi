<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Affiliation extends \AppBundle\Entity\Affiliation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'lastRead', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'url', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'linkLastUpdate', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'hasProducts', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'widthSmall', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'heightSmall', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'widthBig', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'heightBig', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'periodViews', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'isTop', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'inShowcase', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'payments', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'contact', 'subcatAffiliation', 'product'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'lastRead', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'url', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'linkLastUpdate', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'hasProducts', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'widthSmall', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'heightSmall', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'widthBig', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'heightBig', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'periodViews', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'isTop', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'inShowcase', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'payments', '' . "\0" . 'AppBundle\\Entity\\Affiliation' . "\0" . 'contact', 'subcatAffiliation', 'product'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Affiliation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastRead($lastRead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastRead', [$lastRead]);

        return parent::setLastRead($lastRead);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastRead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastRead', []);

        return parent::getLastRead();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkLastUpdate($linkLastUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkLastUpdate', [$linkLastUpdate]);

        return parent::setLinkLastUpdate($linkLastUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkLastUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkLastUpdate', []);

        return parent::getLinkLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasProducts($hasProducts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasProducts', [$hasProducts]);

        return parent::setHasProducts($hasProducts);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasProducts', []);

        return parent::getHasProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg($img)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setViews($views)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViews', [$views]);

        return parent::setViews($views);
    }

    /**
     * {@inheritDoc}
     */
    public function getViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViews', []);

        return parent::getViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodViews($periodViews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodViews', [$periodViews]);

        return parent::setPeriodViews($periodViews);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodViews', []);

        return parent::getPeriodViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsTop($isTop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsTop', [$isTop]);

        return parent::setIsTop($isTop);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsTop', []);

        return parent::getIsTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setInShowcase($inShowcase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInShowcase', [$inShowcase]);

        return parent::setInShowcase($inShowcase);
    }

    /**
     * {@inheritDoc}
     */
    public function getInShowcase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInShowcase', []);

        return parent::getInShowcase();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayments($payments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayments', [$payments]);

        return parent::setPayments($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayments', []);

        return parent::getPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubcatAffiliation(\AppBundle\Entity\SubcategorySiteAffiliation $subcatAffiliation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubcatAffiliation', [$subcatAffiliation]);

        return parent::addSubcatAffiliation($subcatAffiliation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubcatAffiliation(\AppBundle\Entity\SubcategorySiteAffiliation $subcatAffiliation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubcatAffiliation', [$subcatAffiliation]);

        return parent::removeSubcatAffiliation($subcatAffiliation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcatAffiliation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcatAffiliation', []);

        return parent::getSubcatAffiliation();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\AppBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', [$product]);

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\AppBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', [$product]);

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidthSmall($widthSmall)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidthSmall', [$widthSmall]);

        return parent::setWidthSmall($widthSmall);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidthSmall()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidthSmall', []);

        return parent::getWidthSmall();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeightSmall($heightSmall)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeightSmall', [$heightSmall]);

        return parent::setHeightSmall($heightSmall);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeightSmall()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeightSmall', []);

        return parent::getHeightSmall();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidthBig($widthBig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidthBig', [$widthBig]);

        return parent::setWidthBig($widthBig);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidthBig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidthBig', []);

        return parent::getWidthBig();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeightBig($heightBig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeightBig', [$heightBig]);

        return parent::setHeightBig($heightBig);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeightBig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeightBig', []);

        return parent::getHeightBig();
    }

}
