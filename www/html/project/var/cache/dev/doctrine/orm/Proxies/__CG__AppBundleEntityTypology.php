<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Typology extends \AppBundle\Entity\Typology implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrl', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'anchorMenu', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlTp', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlPm', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlIde', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'singularName', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'singularNameUrl', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'synonyms', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'subcategory', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'category', 'microSection', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'sex', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'periodViews', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'body', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'hasModels', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'hasProducts', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'isTop', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterModelCompleted', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterSimilarModels', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterAllModelsTrademark', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterTrademarksSection', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'seeAlso', 'model', 'searchTerm', 'product', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaTitle', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaKeyword', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaDescription'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrl', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'anchorMenu', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlTp', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlPm', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'nameUrlIde', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'singularName', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'singularNameUrl', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'synonyms', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'subcategory', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'category', 'microSection', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'sex', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'periodViews', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'body', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'hasModels', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'hasProducts', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'isTop', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterModelCompleted', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterSimilarModels', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterAllModelsTrademark', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'filterTrademarksSection', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'seeAlso', 'model', 'searchTerm', 'product', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaTitle', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaKeyword', '' . "\0" . 'AppBundle\\Entity\\Typology' . "\0" . 'metaDescription'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Typology $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameUrl($nameUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameUrl', [$nameUrl]);

        return parent::setNameUrl($nameUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameUrl', []);

        return parent::getNameUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSingularName($singularName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSingularName', [$singularName]);

        return parent::setSingularName($singularName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSingularName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingularName', []);

        return parent::getSingularName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSingularNameUrl($singularNameUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSingularNameUrl', [$singularNameUrl]);

        return parent::setSingularNameUrl($singularNameUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSingularNameUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingularNameUrl', []);

        return parent::getSingularNameUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameUrlTp($nameUrlTp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameUrlTp', [$nameUrlTp]);

        return parent::setNameUrlTp($nameUrlTp);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameUrlTp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameUrlTp', []);

        return parent::getNameUrlTp();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameUrlPm($nameUrlPm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameUrlPm', [$nameUrlPm]);

        return parent::setNameUrlPm($nameUrlPm);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameUrlPm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameUrlPm', []);

        return parent::getNameUrlPm();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameUrlIde($nameUrlIde)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameUrlIde', [$nameUrlIde]);

        return parent::setNameUrlIde($nameUrlIde);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameUrlIde()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameUrlIde', []);

        return parent::getNameUrlIde();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumProducts($numProducts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumProducts', [$numProducts]);

        return parent::setNumProducts($numProducts);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumProducts', []);

        return parent::getNumProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setViews($views)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViews', [$views]);

        return parent::setViews($views);
    }

    /**
     * {@inheritDoc}
     */
    public function getViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViews', []);

        return parent::getViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodViews($periodViews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodViews', [$periodViews]);

        return parent::setPeriodViews($periodViews);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodViews', []);

        return parent::getPeriodViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setBody($body)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBody', [$body]);

        return parent::setBody($body);
    }

    /**
     * {@inheritDoc}
     */
    public function getBody()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBody', []);

        return parent::getBody();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasModels($hasModels)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasModels', [$hasModels]);

        return parent::setHasModels($hasModels);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasModels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasModels', []);

        return parent::getHasModels();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasProducts($hasProducts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasProducts', [$hasProducts]);

        return parent::setHasProducts($hasProducts);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasProducts', []);

        return parent::getHasProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setSynonyms($synonyms)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSynonyms', [$synonyms]);

        return parent::setSynonyms($synonyms);
    }

    /**
     * {@inheritDoc}
     */
    public function getSynonyms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSynonyms', []);

        return parent::getSynonyms();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsTop($isTop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsTop', [$isTop]);

        return parent::setIsTop($isTop);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsTop', []);

        return parent::getIsTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeeAlso($seeAlso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeeAlso', [$seeAlso]);

        return parent::setSeeAlso($seeAlso);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeeAlso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeeAlso', []);

        return parent::getSeeAlso();
    }

    /**
     * {@inheritDoc}
     */
    public function addMicroSection(\AppBundle\Entity\MicroSection $microSection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMicroSection', [$microSection]);

        return parent::addMicroSection($microSection);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMicroSection(\AppBundle\Entity\MicroSection $microSection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMicroSection', [$microSection]);

        return parent::removeMicroSection($microSection);
    }

    /**
     * {@inheritDoc}
     */
    public function getMicroSection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMicroSection', []);

        return parent::getMicroSection();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubcategory(\AppBundle\Entity\Subcategory $subcategory = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubcategory', [$subcategory]);

        return parent::setSubcategory($subcategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcategory', []);

        return parent::getSubcategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\AppBundle\Entity\Category $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', [$sex]);

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', []);

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg($img)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilterModelCompleted($filterModelCompleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilterModelCompleted', [$filterModelCompleted]);

        return parent::setFilterModelCompleted($filterModelCompleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilterModelCompleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilterModelCompleted', []);

        return parent::getFilterModelCompleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilterSimilarModels($filterSimilarModels)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilterSimilarModels', [$filterSimilarModels]);

        return parent::setFilterSimilarModels($filterSimilarModels);
    }

    /**
     * {@inheritDoc}
     */
    public function setFilterAllModelsTrademark($filterAllModelsTrademark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilterAllModelsTrademark', [$filterAllModelsTrademark]);

        return parent::setFilterAllModelsTrademark($filterAllModelsTrademark);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilterAllModelsTrademark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilterAllModelsTrademark', []);

        return parent::getFilterAllModelsTrademark();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilterTrademarksSection($filterTrademarksSection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilterTrademarksSection', [$filterTrademarksSection]);

        return parent::setFilterTrademarksSection($filterTrademarksSection);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilterTrademarksSection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilterTrademarksSection', []);

        return parent::getFilterTrademarksSection();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilterSimilarModels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilterSimilarModels', []);

        return parent::getFilterSimilarModels();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubcategoryAffiliation(\AppBundle\Entity\SubcategorySiteAffiliation $subcategoryAffiliation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubcategoryAffiliation', [$subcategoryAffiliation]);

        return parent::setSubcategoryAffiliation($subcategoryAffiliation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcategoryAffiliation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcategoryAffiliation', []);

        return parent::getSubcategoryAffiliation();
    }

    /**
     * {@inheritDoc}
     */
    public function addModel(\AppBundle\Entity\Model $model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addModel', [$model]);

        return parent::addModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function removeModel(\AppBundle\Entity\Model $model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeModel', [$model]);

        return parent::removeModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function addSearchTerm(\AppBundle\Entity\SearchTerm $searchTerm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSearchTerm', [$searchTerm]);

        return parent::addSearchTerm($searchTerm);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSearchTerm(\AppBundle\Entity\SearchTerm $searchTerm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSearchTerm', [$searchTerm]);

        return parent::removeSearchTerm($searchTerm);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchTerm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchTerm', []);

        return parent::getSearchTerm();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\AppBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', [$product]);

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\AppBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', [$product]);

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitle($metaTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitle', [$metaTitle]);

        return parent::setMetaTitle($metaTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', []);

        return parent::getMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeyword($metaKeyword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeyword', [$metaKeyword]);

        return parent::setMetaKeyword($metaKeyword);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeyword', []);

        return parent::getMetaKeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', [$metaDescription]);

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', []);

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnchorMenu($anchorMenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnchorMenu', [$anchorMenu]);

        return parent::setAnchorMenu($anchorMenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnchorMenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnchorMenu', []);

        return parent::getAnchorMenu();
    }

}
